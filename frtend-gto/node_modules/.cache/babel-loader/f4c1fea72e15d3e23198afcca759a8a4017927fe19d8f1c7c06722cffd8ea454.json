{"ast":null,"code":"var _jsxFileName = \"D:\\\\Jos\\xE9\\\\Desktop\\\\Faculdade\\\\Quinto Periodo\\\\DAW\\\\frtend-gto\\\\src\\\\components\\\\comments\\\\CommentContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentContext = /*#__PURE__*/createContext(undefined);\n\n// CommentContext.tsx\n\nexport const CommentProvider = ({\n  children\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const addComment = newComment => {\n    setComments(prevComments => [...prevComments, newComment]);\n  };\n  return /*#__PURE__*/_jsxDEV(CommentContext.Provider, {\n    value: {\n      comments,\n      addComment\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentProvider, \"RHrI29Yaf4wTXaDPqg0VDGN+Yyo=\");\n_c = CommentProvider;\nexport const useCommentContext = () => {\n  _s2();\n  const context = React.useContext(CommentContext);\n  if (!context) {\n    throw new Error('useCommentContext must be used within a CommentProvider');\n  }\n  return context;\n};\n_s2(useCommentContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CommentProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","CommentContext","undefined","CommentProvider","children","_s","comments","setComments","addComment","newComment","prevComments","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCommentContext","_s2","context","useContext","Error","$RefreshReg$"],"sources":["D:/JosÃ©/Desktop/Faculdade/Quinto Periodo/DAW/frtend-gto/src/components/comments/CommentContext.tsx"],"sourcesContent":["import React, { createContext, useState, ReactNode } from 'react';\r\n\r\ninterface CommentContextProps {\r\n  comments: string[];\r\n  addComment: (comment: string) => void;\r\n}\r\n\r\ninterface CommentProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst CommentContext = createContext<CommentContextProps | undefined>(undefined);\r\n\r\n// CommentContext.tsx\r\n\r\nexport const CommentProvider: React.FC = ({ children }) => {\r\n  const [comments, setComments] = useState<string[]>([]);\r\n\r\n  const addComment = (newComment: string) => {\r\n    setComments((prevComments) => [...prevComments, newComment]);\r\n  };\r\n\r\n  return (\r\n    <CommentContext.Provider value={{ comments, addComment }}>\r\n      {children}\r\n    </CommentContext.Provider>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport const useCommentContext = () => {\r\n  const context = React.useContext(CommentContext);\r\n  if (!context) {\r\n    throw new Error('useCommentContext must be used within a CommentProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWlE,MAAMC,cAAc,gBAAGJ,aAAa,CAAkCK,SAAS,CAAC;;AAEhF;;AAEA,OAAO,MAAMC,eAAyB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAW,EAAE,CAAC;EAEtD,MAAMU,UAAU,GAAIC,UAAkB,IAAK;IACzCF,WAAW,CAAEG,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,UAAU,CAAC,CAAC;EAC9D,CAAC;EAED,oBACET,OAAA,CAACC,cAAc,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEN,QAAQ;MAAEE;IAAW,CAAE;IAAAJ,QAAA,EACtDA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAACX,EAAA,CAZWF,eAAyB;AAAAc,EAAA,GAAzBd,eAAyB;AAiBtC,OAAO,MAAMe,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACrC,MAAMC,OAAO,GAAGxB,KAAK,CAACyB,UAAU,CAACpB,cAAc,CAAC;EAChD,IAAI,CAACmB,OAAO,EAAE;IACZ,MAAM,IAAIE,KAAK,CAAC,yDAAyD,CAAC;EAC5E;EACA,OAAOF,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,iBAAiB;AAAA,IAAAD,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}